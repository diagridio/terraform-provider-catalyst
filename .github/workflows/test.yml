# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.DIAGRID_BOT_APPLICATION_ID }}  
          application_private_key: ${{ secrets.DIAGRID_BOT_APPLICATION_PRIVATE_KEY }}
          revoke_token: true

      - name: Grant access to private diagrid repos
        shell: bash # required on run steps in composite actions
        run: |
          git config --global url."https://x-acces-token:${{ inputs.workflow_token || steps.get_workflow_token.outputs.token }}@github.com/diagridio/".insteadOf "https://github.com/diagridio/"

      - name: Setup Go
        uses: actions/setup-go@v5.0.2
        env:
          GOPRIVATE: "github.com/diagridio/*"
          GOPROXY: "https://proxy.golang.org,direct"
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Go modules download
        run: go mod download

      - name: Build
        run: go build -v .

      - name: Run linters
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: '1.9.3'
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run unit tests in a matrix with Terraform CLI versions
  testunit:
    name: Terraform Provider Unit Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.7.*'
          - '1.8.*'
          - '1.9.*'
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
        run: go test -v -cover ./...
        timeout-minutes: 10

  # Run acceptance tests in a matrix with Terraform CLI versions
  testacc:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.7.*'
          - '1.8.*'
          - '1.9.*'
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
        run: go test -v -cover ./...
        timeout-minutes: 10
